-- Операторы, фильтрация, сортировка и ограничение

-- 1. Пусть в таблице users поля created_at и updated_at оказались незаполненными. Заполните их текущими датой и временем.
update users set created_at = now(), updated_at = now();

-- 2. Таблица users была неудачно спроектирована. Записи created_at и updated_at были заданы типом VARCHAR и в них долгое время помещались значения в формате 20.10.2017 8:10. 
-- Необходимо преобразовать поля к типу DATETIME, сохранив введённые ранее значения.
alter table users add column created_at datetime, add column updated_at datetime;

-- 3. В таблице складских запасов storehouses_products в поле value могут встречаться самые разные цифры: 0, если товар закончился и выше нуля, если на складе имеются запасы. 
-- Необходимо отсортировать записи таким образом, чтобы они выводились в порядке увеличения значения value. Однако нулевые запасы должны выводиться в конце, после всех записей.
select id, value from storehouses_products by order by case when value = 0 then 3000 else value end;


-- Агрегация данных

-- 1. Подсчитайте средний возраст пользователей в таблице users
select avg(age) from (select year(current_timestamp) - year(birthday) as age from users) as age;

-- 2. Подсчитайте количество дней рождения, которые приходятся на каждый из дней недели. Следует учесть, что необходимы дни недели текущего года, а не года рождения.
select case weekday(birthday) when 0 then 'Mo' when 1 then 'Tu' when 2 then 'We' when 3 then 'Th' when 4 then 'Fr' when 5 then 'Sa' when 6 then 'Su' else -1 end as week_day,
count(birthday) as num from users group by week_day order by field(week_day, 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su');